name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build-release:
    permissions:
      contents: write
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install musl-tools to provide musl-gcc
      - name: Install musl-tools
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      # Install Rust and add the musl target.
      - name: Install Rust (with musl target)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl

      # Build for musl target.
      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-musl

      # Prepare binaries with the correct executable permissions.
      - name: Prepare binaries
        run: |
          mkdir -p dist
          install -m 755 target/x86_64-unknown-linux-musl/release/logtopbind dist/logtopbind
          install -m 755 target/x86_64-unknown-linux-musl/release/sqlite-rs dist/sqlite-rs
          install -m 755 target/x86_64-unknown-linux-musl/release/sqlite-rs dist/logtopprint

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            dist/logtopbind
            dist/sqlite-rs
            dist/logtopprint
